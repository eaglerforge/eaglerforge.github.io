import{_ as e,c as o,o as l,V as c}from"./chunks/framework.gkMttBBc.js";const m=JSON.parse('{"title":"BlockData","description":"","frontmatter":{},"headers":[],"relativePath":"apidocs/globals/BlockData.md","filePath":"apidocs/globals/BlockData.md"}'),a={name:"apidocs/globals/BlockData.md"},t=c('<h1 id="blockdata" tabindex="-1">BlockData <a class="header-anchor" href="#blockdata" aria-label="Permalink to &quot;BlockData&quot;">â€‹</a></h1><p>Used to represent a block.</p><p>Has the following properties:</p><ul><li><code>unlocalizedName</code>: String: equal to the block&#39;s <code>unlocalizedName</code></li><li><code>slipperiness</code>: Number: equal to the block&#39;s <code>slipperiness</code></li><li><code>blockParticleGravity</code>: Number: equal to the block&#39;s <code>blockParticleGravity</code></li><li><code>minX</code>: Number: equal to the block&#39;s <code>minX</code></li><li><code>minY</code>: Number: equal to the block&#39;s <code>minY</code></li><li><code>minZ</code>: Number: equal to the block&#39;s <code>minZ</code></li><li><code>maxX</code>: Number: equal to the block&#39;s <code>maxX</code></li><li><code>maxY</code>: Number: equal to the block&#39;s <code>maxY</code></li><li><code>maxZ</code>: Number: equal to the block&#39;s <code>maxZ</code></li><li><code>blockMaterial</code>: <a href="./MaterialData.html">MaterialData</a>: represents the blocks material.</li><li><code>enableStats</code>: Boolean: equal to the block&#39;s <code>enableStats</code></li><li><code>needsRandomTick</code>: Boolean: equal to the block&#39;s <code>needsRandomTick</code></li><li><code>isBlockContainer</code>: Boolean: equal to the block&#39;s <code>isBlockContainer</code></li><li><code>useNeighborBrightness</code>: Boolean: equal to the block&#39;s <code>useNeighborBrightness</code></li><li><code>translucent</code>: Boolean: equal to the block&#39;s <code>translucent</code></li><li><code>fullBlock</code>: Boolean: equal to the block&#39;s <code>fullBlock</code></li><li><code>lightOpacity</code>: Integer: equal to the block&#39;s <code>lightOpacity</code></li><li><code>lightValue</code>: Integer: equal to the block&#39;s <code>lightValue</code></li><li><code>blockHardness</code>: Integer: equal to the block&#39;s <code>blockHardness</code></li><li><code>blockResistance</code>: Integer: equal to the block&#39;s <code>blockResistance</code></li><li><code>noRender</code>: Boolean: equal to the block&#39;s <code>noRender</code></li><li><code>forceRender</code>: Boolean: equal to the block&#39;s <code>forceRender</code></li><li><code>fullCube</code>: Boolean: equal to the block&#39;s <code>fullCube</code></li></ul><p>It has the following methods:</p><ul><li><code>getID() : Integer</code></li></ul>',6),d=[t];function i(s,n,r,u,b,k){return l(),o("div",null,d)}const p=e(a,[["render",i]]);export{m as __pageData,p as default};

import{_ as e,c as o,o as t,V as a}from"./chunks/framework.gkMttBBc.js";const h=JSON.parse('{"title":"ItemStackData","description":"","frontmatter":{},"headers":[],"relativePath":"apidocs/globals/ItemStackData.md","filePath":"apidocs/globals/ItemStackData.md"}'),c={name:"apidocs/globals/ItemStackData.md"},i=a('<h1 id="itemstackdata" tabindex="-1">ItemStackData <a class="header-anchor" href="#itemstackdata" aria-label="Permalink to &quot;ItemStackData&quot;">​</a></h1><p>Represents an itemstack.</p><h3 id="constructor" tabindex="-1">Constructor: <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor:&quot;">​</a></h3><p>PluginAPI.contructors.ItemStack({itemId: Integer, amount: Integer, itemDamage: Integer})</p><p>Has the following properties:</p><ul><li><code>amount : Integer</code></li><li><code>animationsToGo : Integer</code></li><li><code>itemId : Integer</code></li><li><code>itemDamage : Integer</code></li><li><code>itemFrame : [EntityData](EntityData.md)</code> (If existing)</li><li><code>canDestroyCacheBlock : BlockData</code></li><li><code>canDestroyCacheResult : Boolean</code></li><li><code>canPlaceOnCacheBlock : BlockData</code></li><li><code>canPlaceOnCacheResult : Boolean</code></li></ul><p>Has the following methods:</p><ul><li><code>getItem() : ItemData</code></li><li><code>getMaxStackSize() : Integer</code></li><li><code>isStackable() : Boolean</code></li><li><code>isItemStackDamageable() : Boolean</code></li><li><code>getHasSubtypes() : Boolean</code></li><li><code>isItemDamaged() : Boolean</code></li><li><code>getItemDamage() : Integer</code></li><li><code>getMetadata() : Integer</code></li><li><code>setItemDamage({meta: Integer}) : void</code></li><li><code>getMaxDamage() : Integer</code></li><li><code>copy() : ItemStackData</code></li><li><code>getUnlocalizedName() : String</code></li><li><code>toString() : String</code></li><li><code>getMaxItemUseDuration() : Integer</code></li><li><code>getDisplayName() : String</code></li><li><code>setDisplayName({displayName: String}) : ItemStackData</code></li><li><code>clearCustomName() : void</code></li><li><code>hasDisplayName() : Boolean</code></li><li><code>hasEffect() : Boolean</code></li><li><code>isItemEnchantable() : Boolean</code></li><li><code>addEnchantment({ench: EnchantmentRef, level: Integer}) : void</code></li><li><code>isItemEnchanted() : Boolean</code></li><li><code>canEditBlocks() : Boolean</code></li><li><code>isOnItemFrame() : Boolean</code></li><li><code>getRepairCost() : Integer</code></li><li><code>setRepairCost({cost: Integer}) : void</code></li><li><code>setItem(newItem: ItemRef) : void</code></li><li><code>canDestroy({blockId: Integer}) : Boolean</code></li><li><code>canPlaceOn({blockId: Integer}) : Boolean</code></li><li><code>toNBT() : String</code></li><li><code>fromNBT({nbt: String}) : void</code></li><li><code>getLore() : String[]</code></li><li><code>setLore({lore: String[]}) : void</code></li></ul>',8),l=[i];function d(n,r,s,m,g,I){return t(),o("div",null,l)}const D=e(c,[["render",d]]);export{h as __pageData,D as default};
